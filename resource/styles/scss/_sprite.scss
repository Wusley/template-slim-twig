/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-bottom-17-9-name: 'arrow-bottom-17-9';
$arrow-bottom-17-9-x: 25px;
$arrow-bottom-17-9-y: 0px;
$arrow-bottom-17-9-offset-x: -25px;
$arrow-bottom-17-9-offset-y: 0px;
$arrow-bottom-17-9-width: 17px;
$arrow-bottom-17-9-height: 9px;
$arrow-bottom-17-9-total-width: 42px;
$arrow-bottom-17-9-total-height: 24px;
$arrow-bottom-17-9-image: 'sprite.png';
$arrow-bottom-17-9: (25px, 0px, -25px, 0px, 17px, 9px, 42px, 24px, 'sprite.png', 'arrow-bottom-17-9', );
$arrow-bottom-25-12-over-name: 'arrow-bottom-25-12-over';
$arrow-bottom-25-12-over-x: 0px;
$arrow-bottom-25-12-over-y: 0px;
$arrow-bottom-25-12-over-offset-x: 0px;
$arrow-bottom-25-12-over-offset-y: 0px;
$arrow-bottom-25-12-over-width: 25px;
$arrow-bottom-25-12-over-height: 12px;
$arrow-bottom-25-12-over-total-width: 42px;
$arrow-bottom-25-12-over-total-height: 24px;
$arrow-bottom-25-12-over-image: 'sprite.png';
$arrow-bottom-25-12-over: (0px, 0px, 0px, 0px, 25px, 12px, 42px, 24px, 'sprite.png', 'arrow-bottom-25-12-over', );
$arrow-bottom-25-12-name: 'arrow-bottom-25-12';
$arrow-bottom-25-12-x: 0px;
$arrow-bottom-25-12-y: 12px;
$arrow-bottom-25-12-offset-x: 0px;
$arrow-bottom-25-12-offset-y: -12px;
$arrow-bottom-25-12-width: 25px;
$arrow-bottom-25-12-height: 12px;
$arrow-bottom-25-12-total-width: 42px;
$arrow-bottom-25-12-total-height: 24px;
$arrow-bottom-25-12-image: 'sprite.png';
$arrow-bottom-25-12: (0px, 12px, 0px, -12px, 25px, 12px, 42px, 24px, 'sprite.png', 'arrow-bottom-25-12', );
$spritesheet-width: 42px;
$spritesheet-height: 24px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($arrow-bottom-17-9, $arrow-bottom-25-12-over, $arrow-bottom-25-12, );
$spritesheet: (42px, 24px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
